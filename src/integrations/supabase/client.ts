// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('Missing Supabase environment variables. Please check your .env file.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Singleton pattern to prevent multiple GoTrueClient instances
let _supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

export const supabase = (() => {
  if (!_supabaseInstance) {
    _supabaseInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
      },
      global: {
        headers: {
          'Accept': '*/*',
        }
      }
    });
  }
  return _supabaseInstance;
})();

// Singleton pattern for investment client to prevent multiple instances
let _supabaseInvestmentsInstance: ReturnType<typeof createClient<Database>> | null = null;

// Temporary workaround client for investment queries (avoids 406 errors)
export const supabaseInvestments = (() => {
  if (!_supabaseInvestmentsInstance) {
    _supabaseInvestmentsInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        persistSession: false,
        autoRefreshToken: false,
      },
      global: {
        headers: {
          'Accept': '*/*',
          'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`,
        }
      }
    });
  }
  return _supabaseInvestmentsInstance;
})();